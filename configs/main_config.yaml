# KGRL主配置文件
# Main Configuration File for Knowledge Graph Enhanced Reinforcement Learning

# 项目信息
project:
  name: "KGRL"
  full_name: "Knowledge Graph Enhanced Reinforcement Learning"
  version: "1.0.0"
  description: "A framework for integrating knowledge graphs with reinforcement learning"
  author: "KGRL Team"
  license: "MIT"

# 项目路径
paths:
  # 根目录
  root: "."
  
  # 源代码
  src: "src"
  
  # 数据目录
  data: "data"
  benchmarks: "data/benchmarks"
  knowledge_graphs: "data/knowledge_graphs"
  processed: "data/processed"
  raw: "data/raw"
  
  # 配置目录
  configs: "configs"
  
  # 输出目录
  outputs: "outputs"
  results: "results"
  logs: "logs"
  checkpoints: "checkpoints"
  
  # 临时目录
  temp: "temp"
  cache: "cache"

# 配置文件引用
config_files:
  # 知识图谱配置
  kg_construction: "configs/kg/kg_construction.yaml"
  
  # 数据库配置
  neo4j: "configs/neo4j/neo4j_config.yaml"
  
  # 数据抽取配置
  extraction: "configs/extraction/extraction_config.yaml"
  
  # 智能体配置
  agents: "configs/agents/agent_config.yaml"
  
  # 环境配置
  environments: "configs/environments/environment_config.yaml"

# 全局设置
global:
  # 随机种子
  random_seed: 42
  
  # 设备设置
  device: "auto"  # auto, cpu, cuda, mps
  
  # 并行设置
  parallel:
    enabled: false
    num_workers: 4
    
  # 日志设置
  logging:
    level: "INFO"
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    console: true
    file: true
    
  # 调试设置
  debug:
    enabled: false
    verbose: false
    save_intermediate: false

# 模块启用状态
modules:
  # 核心模块
  knowledge_graph: true
  agents: true
  environments: true
  
  # 数据模块
  data_extraction: true
  data_processing: true
  
  # 训练模块
  training: true
  evaluation: true
  
  # 可视化模块
  visualization: false
  
  # 实验模块
  experiments: false

# 数据源配置
data_sources:
  # ALFWorld
  alfworld:
    enabled: true
    priority: 1
    
  # TextWorld
  textworld:
    enabled: true
    priority: 2
    
  # 自定义数据
  custom:
    enabled: false
    priority: 3

# 输出格式
output_formats:
  # 知识图谱格式
  knowledge_graphs:
    - "json"
    - "graphml"
    
  # 结果格式
  results:
    - "json"
    - "csv"
    
  # 日志格式
  logs:
    - "txt"
    - "json"

# 质量控制
quality_control:
  # 数据验证
  data_validation: true
  
  # 结果验证
  result_validation: true
  
  # 性能监控
  performance_monitoring: true
  
  # 错误处理
  error_handling: "log_and_continue"  # fail_fast, log_and_continue, ignore

# 性能设置
performance:
  # 内存限制
  memory_limit_mb: 4096
  
  # 缓存设置
  caching:
    enabled: true
    size_mb: 1024
    ttl_hours: 24
    
  # 批处理
  batch_processing:
    enabled: true
    batch_size: 100

# 安全设置
security:
  # 数据库安全
  database:
    use_ssl: false
    verify_certificates: false
    
  # 文件安全
  files:
    check_permissions: true
    backup_before_overwrite: true

# 实验设置
experiments:
  # 实验跟踪
  tracking:
    enabled: false
    backend: "mlflow"  # mlflow, wandb, tensorboard
    
  # 超参数优化
  hyperparameter_optimization:
    enabled: false
    backend: "optuna"  # optuna, hyperopt, ray_tune
    
  # 模型版本控制
  model_versioning:
    enabled: false
    backend: "dvc"  # dvc, git_lfs

# 部署设置
deployment:
  # 容器化
  containerization:
    enabled: false
    platform: "docker"  # docker, podman
    
  # 云部署
  cloud:
    enabled: false
    provider: "aws"  # aws, gcp, azure
    
  # API服务
  api:
    enabled: false
    framework: "fastapi"  # fastapi, flask, django

# 监控设置
monitoring:
  # 系统监控
  system:
    enabled: false
    metrics: ["cpu", "memory", "disk", "network"]
    
  # 应用监控
  application:
    enabled: false
    metrics: ["response_time", "throughput", "error_rate"]
    
  # 业务监控
  business:
    enabled: false
    metrics: ["success_rate", "accuracy", "efficiency"]

# 通知设置
notifications:
  # 邮件通知
  email:
    enabled: false
    smtp_server: ""
    
  # Slack通知
  slack:
    enabled: false
    webhook_url: ""
    
  # 钉钉通知
  dingtalk:
    enabled: false
    webhook_url: ""

# 备份设置
backup:
  # 自动备份
  auto_backup:
    enabled: false
    frequency: "daily"  # hourly, daily, weekly
    retention_days: 30
    
  # 备份位置
  locations:
    - "backups/local"
    - "backups/cloud"
    
  # 备份内容
  content:
    - "configs"
    - "data/knowledge_graphs"
    - "results"
    - "logs"

# 文档设置
documentation:
  # 自动生成
  auto_generation:
    enabled: false
    formats: ["html", "pdf"]
    
  # API文档
  api_docs:
    enabled: false
    framework: "sphinx"  # sphinx, mkdocs
    
  # 用户手册
  user_manual:
    enabled: false
    language: "zh-CN"

# 测试设置
testing:
  # 单元测试
  unit_tests:
    enabled: true
    framework: "pytest"
    coverage_threshold: 80
    
  # 集成测试
  integration_tests:
    enabled: true
    
  # 性能测试
  performance_tests:
    enabled: false
    
  # 端到端测试
  e2e_tests:
    enabled: false
